{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Scoredata.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","speed","score","fill","maxScore","addEventListener","event","key","Math","max","min","Ball","radius","boardWidth","direction","ping1","Audio","pingSound1","ping2","pingSound2","ping3","pingSound3","ping4","pingSound4","ping5","pingSound5","resetBall","vy","floor","random","vx","abs","player1","player2","paddle","coordinates","leftX","rightX","topY","bottomY","play","hitLeft","hitRight","hitTop","hitBottom","player","wallCollision","paddleCollision","ball","rightGoal","leftGoal","recordGoal","Score","size","text","textContent","Game","element","gameElement","getElementById","board","paddleWidth","paddleHeight","boardGap","r","score1","score2","pause","numbSeconds","Date","getSeconds","setTimeout","theParm","i","innerHTML","render","pScore1","pScore2","mScore","lCounter","console","log","loserScore","counter2","textContext","textContextr","alert","window","location","reload","game","counter","gameLoop","now","requestAnimationFrame"],"mappings":"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","file":"src.67e207d9.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const KEYS = {\n  a: \"a\",\n  z: \"z\",\n  up: \"ArrowUp\",\n  down: \"ArrowDown\",\n  spaceBar: \" \"\n};\n","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(svg) {\n    // Make the board rectangle\n    let rect = document.createElementNS(SVG_NS, \"rect\");\n\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"fill\", \"#353535\");\n\n    // console.log(rect);\n\n    // Make the center line\n    let line = document.createElementNS(SVG_NS, \"line\");\n\n    line.setAttributeNS(null, \"x1\", this.width / 2);\n    line.setAttributeNS(null, \"x2\", this.width / 2);\n    line.setAttributeNS(null, \"y1\", 0);\n    line.setAttributeNS(null, \"y2\", this.height);\n    line.setAttributeNS(null, \"stroke\", \"white\");\n    line.setAttributeNS(null, \"stroke-dasharray\", \"20, 15\");\n    line.setAttributeNS(null, \"stroke-width\", \"4\");\n\n    //paint the screen\n    svg.appendChild(rect);\n    svg.appendChild(line);\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, up, down) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = 30; // speed of the paddle movement. Could be called distance.... It's the distance the paddle moves with a single key stroke\n    this.score = 0;\n    this.fill = \"yellow\";\n    this.maxScore = 10;\n\n    document.addEventListener(\"keydown\", event => {\n      // console.log(event);\n      switch (event.key) {\n        case up:\n          this.up();\n          break;\n        case down:\n          this.down();\n          break;\n      }\n    });\n  }\n\n  up() {\n    this.y = Math.max(0, this.y - this.speed);\n\n    //dhStretch1a - Wrap Paddle\n    if (this.y === 0) {\n      this.y = 256; // 256\n    }\n  }\n\n  down() {\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n\n    //dhStretch1b - Wrap Paddle\n    if (this.y === 200) {\n      this.y = -56; // 56\n    }\n  }\n  coordinates(x, y, width, height) {\n    let leftX = x; // Left side of the paddle\n    let rightX = x + width; // Right side of the paddle\n    let topY = y; // Top of the paddle\n    let bottomY = y + height; // Bottom of the paddle\n    return [leftX, rightX, topY, bottomY];\n  }\n\n  render(svg) {\n    let rect = document.createElementNS(SVG_NS, \"rect\");\n\n    rect.setAttributeNS(null, \"x\", this.x);\n    rect.setAttributeNS(null, \"y\", this.y);\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"fill\", this.fill);\n\n    svg.appendChild(rect); // Paint the screen\n\n    //dhDelete me...no paddles and end game quickly!\n    this.x = -56;\n    this.y = 256;\n    // this.maxScore = 2;\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nimport pingSound1 from \"../../public/sounds/pong-01.wav\";\nimport pingSound2 from \"../../public/sounds/pong-02.wav\";\nimport pingSound3 from \"../../public/sounds/pong-03.wav\";\nimport pingSound4 from \"../../public/sounds/pong-04.wav\";\nimport pingSound5 from \"../../public/sounds/Chopin - Funeral March.mp4\";\n\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight, fill) {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.fill = fill;\n    this.direction = 1;\n    this.ping1 = new Audio(pingSound1);\n    this.ping2 = new Audio(pingSound2);\n    this.ping3 = new Audio(pingSound3);\n    this.ping4 = new Audio(pingSound4);\n    this.ping5 = new Audio(pingSound5);\n    this.resetBall();\n  }\n  resetBall() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n\n    // alert(\"vx & vy-in\", this.vx, this.vy);\n\n    // Generate random number between -5 and 5. This is for the y axis\n    // Make sure number does not equal 0...to get around a bug\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = Math.floor(Math.random() * 10 - 5);\n    }\n\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n\n    // console.log(this.vx, this.vy);\n    // alert(\"resetBall @ bottom of method: vx & vy\", this.vx, this.vy);\n  }\n\n  paddleCollision(player1, player2) {\n    //\n    // if the vx number is positive...moving to the right, player 2\n    // if vx is greater than 0, detect paddle2, else detect paddle1\n    // console.log(player1);\n    // console.log(player2);\n\n    if (this.vx > 0) {\n      let paddle = player2.coordinates(\n        player2.x,\n        player2.y,\n        player2.width,\n        player2.height\n      );\n\n      let [leftX, rightX, topY, bottomY] = paddle;\n\n      // console.log(\"in paddle collission1\", leftX, rightX, topY, bottomY);\n      // console.log(\"in paddle collission2\", this.x, this.y, this.radius);\n      // console.log(\n      //   \"The Calc\",\n      //   this.x,\n      //   this.y,\n      //   this.radius,\n      //   leftX,\n      //   rightX,\n      //   topY,\n      //   bottomY\n      //);\n\n      // dhStretch...but not fixed: this.y >=   . There is an inadequate calculation here.\n      if (\n        this.x + this.radius >= leftX && // A score on player1 (Player2 scored)\n        this.x + this.radius <= rightX &&\n        this.y >= topY && //this.y >= topY - 15\n        this.y <= bottomY //this.y <= bottomY + 15\n      ) {\n        this.ping1.play(); // Player 2 stopped the ball\n        this.vx = -this.vx;\n      }\n    } else {\n      let paddle = player1.coordinates(\n        player1.x,\n        player1.y,\n        player1.width,\n        player1.height\n      );\n\n      let [leftX, rightX, topY, bottomY] = paddle;\n\n      // console.log(\"player1 paddle\", paddle);\n\n      if (\n        this.x - this.radius <= rightX && // A score on player2 (Player1 scored)\n        this.x - this.radius >= leftX &&\n        this.y >= topY &&\n        this.y <= bottomY\n      ) {\n        this.ping2.play(); // Player 1 stopped the ball\n        this.vx = -this.vx;\n      }\n    }\n    // console.log(player1);\n    // console.log(player2);\n  }\n\n  wallCollision() {\n    const hitLeft = this.x - this.radius <= 0;\n    const hitRight = this.x + this.radius >= this.boardWidth;\n    const hitTop = this.y - this.radius <= 0;\n    const hitBottom = this.y + this.radius >= this.boardHeight;\n\n    // console.log(hitLeft, hitRight, hitTop, hitBottom);\n\n    if (hitLeft || hitRight) {\n      this.vx = -this.vx;\n    } else if (hitTop || hitBottom) {\n      this.vy = -this.vy;\n    }\n  }\n\n  recordGoal(player) {\n    player.score++;\n    this.resetBall();\n\n    // console.log(player.score);\n    // alert(\"Goal!\");\n    // console.log(player);\n    // if (player.x === 10) {\n    //   console.log(\"Player1 Scored\"); // Before paddles could move\n    // } else {\n    //   console.log(\"Player2 Scored\");\n    // }\n  }\n\n  pongBeep() {\n    new Audio(\n      \"data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+ Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ 0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7 FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb//////////////////////////// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\"\n    ).play();\n  }\n\n  render(svg, player1, player2) {\n    this.x += this.vx;\n    this.y += this.vy;\n\n    this.wallCollision();\n\n    this.paddleCollision(player1, player2);\n\n    let ball = document.createElementNS(SVG_NS, \"circle\");\n\n    ball.setAttributeNS(null, \"r\", this.radius);\n    ball.setAttributeNS(null, \"cx\", this.x);\n    ball.setAttributeNS(null, \"cy\", this.y);\n    ball.setAttributeNS(null, \"fill\", this.fill);\n\n    // This determines what player scored\n    const rightGoal = this.x + this.radius >= this.boardWidth;\n    const leftGoal = this.x - this.radius <= 0;\n\n    svg.appendChild(ball); // Paint the screen\n\n    // console.log(this.x, this.y, leftGoal, rightGoal);\n\n    if (rightGoal) {\n      this.recordGoal(player1);\n      this.direction = 1;\n    } else if (leftGoal) {\n      this.recordGoal(player2);\n      this.direction = -1;\n    }\n    ////////////////////////////////////////////////////////////////////////////\n    // dhStretch2 - If player reaches 80% of maxScore, color paddle green   ///\n    //            - If player reaches 80% of maxScore, make paddle smaller  //\n    //            - If player reaches 70% of maxScore, play Funeral March  //\n    ////////////////////////////////////////////////////////////////////////\n\n    const pScore1 = player1.score;\n    const pScore2 = player2.score;\n    const mScore = player1.maxScore;\n    var winnerText = \"\";\n\n    // console.log(pScore1, pScore2, mScore);\n\n    // if ((pScore1 || pScore2) === mScore) {\n    //   if (pScore1 > pScore2) {\n    //     winnerText = \"Game over! Player1 won. \";\n    //   } else {\n    //     winnerText = \"Game over! Player2 won. \";\n    //   }\n    //   alert(winnerText + pScore1 + \", \" + pScore2);\n    //   //reset game here\n    //   window.location.reload(true);\n    // }\n\n    // if (pScore1 >= mScore * 0.8) {\n    //   player1.fill = \"green\";\n    //   player1.height = 50; // half height\n    //   // player1.height = Math.max(36, player1.height - 10);\n    // }\n\n    // if (pScore2 >= mScore * 0.8) {\n    //   player2.fill = \"orange\";\n    //   player2.height = 50; // half height\n    //   // player1.height = Math.max(36, player2.height - 10);\n    // }\n\n    // if (pScore1 || pScore2 >= mScore * 0.7) {\n    //   this.ping5.play();\n    //}\n\n    /////////////////////////////////////\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nexport default class Score {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n\n  render(svg, score) {\n    let text = document.createElementNS(SVG_NS, \"text\");\n\n    text.setAttributeNS(null, \"x\", this.x);\n    text.setAttributeNS(null, \"y\", this.y);\n    text.setAttributeNS(null, \"font-family\", ' \"Silkscreen Web\", monotype');\n    text.setAttributeNS(null, \"font-size\", this.size);\n    text.setAttributeNS(null, \"fill\", \"gold\"); // Score colour\n\n    text.textContent = score;\n\n    // console.log(score);\n\n    // alert(\"before append\");\n    svg.appendChild(text); // Paint the screen\n    // alert(\"after append\");\n  }\n}\n","import { SVG_NS, KEYS } from \"../settings.js\";\nimport Board from \"./Board.js\";\nimport Paddle from \"./Paddle.js\";\nimport Ball from \"./Ball.js\";\nimport Score from \"./Scoredata.js\";\n\nexport default class Game {\n  constructor(element, width, height, spaceBar) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n    this.paddleWidth = 8;\n    this.paddleHeight = 56;\n    this.boardGap = 10;\n\n    this.player1 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      this.boardGap,\n      (this.height - this.paddleHeight) / 2,\n      KEYS.a,\n      KEYS.z\n    );\n\n    this.player2 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      this.width - this.paddleWidth - this.boardGap,\n      (this.height - this.paddleHeight) / 2,\n      KEYS.up,\n      KEYS.down\n    );\n\n    this.r = 8;\n    this.fill = \"hotPink\";\n\n    this.ball = new Ball(this.r, this.width, this.height, this.fill);\n\n    this.score1 = new Score(this.width / 2 - 50, 30, 30);\n    this.score2 = new Score(this.width / 2 + 25, 30, 30);\n\n    //dh delete me\n    // this.score1 = new Score(this.width / 2 - 50, 150, 30);\n    // this.score2 = new Score(this.width / 2 + 25, 150, 30);\n\n    // console.log(\"player1 Score: \", this.score1);\n    // console.log(\"player2 Score: \", this.score2);\n    // console.log(\"This is this.player1: \", this.player1);\n    // console.log(\"This is this.player2: \", this.player2);\n\n    // console.log(this.player2);\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause; // if not paused, then pause. If paused, then unpause.\n          this.player1.speed = 10;\n          this.player2.speed = 10;\n          break;\n      }\n    });\n  }\n\n  secondsDelay(numbSeconds) {\n    const currentDate = new Date();\n    const currentSeconds = currentDate.getSeconds() + 1000; // 1030\n    var waitSeconds = currentSeconds + this.numbSeconds; // 1040\n\n    setTimeout(function() {\n      // alert(\"Hello\");\n    }, 1000 * numbSeconds);\n\n    // this.numbSeconds = 10;\n\n    // alert(\"numbSeconds passed \", this.numbSeconds);\n\n    // // console.log(clockSeconds, this.numbSeconds);\n    // // alert(\"in secondsDelay\");\n    // console.log(\"currentSeconds \", currentSeconds, \"waitSeconds\", waitSeconds);\n\n    // for (\n    //   waitSeconds = waitSeconds;\n    //   waitSeconds < currentSeconds;\n    //   waitSeconds++\n    // ) {\n    //   console.log(\"waitSeconds \", waitSeconds);\n    // }\n  }\n\n  emptyFunction(theParm) {\n    for (var i = 0; i < 4; i++) {\n      (function(i) {\n        setTimeout(function() {\n          // console.log(\"HelloJJJJJ\", i);\n        }, theParm * 400000000 * i);\n      })(i);\n    }\n  }\n\n  render() {\n    // If the game is paused, do not render the whole game, simply return\n    if (this.pause) {\n      this.player1.speed = 0;\n      this.player2.speed = 0;\n      return;\n    }\n\n    this.gameElement.innerHTML = \"\";\n\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n\n    this.gameElement.appendChild(svg); // Paint the Screen\n\n    this.board.render(svg);\n    this.player1.render(svg);\n    this.player2.render(svg);\n    this.ball.render(svg, this.player1, this.player2);\n    this.score1.render(svg, this.player1.score);\n    this.score2.render(svg, this.player2.score);\n\n    //////////////////////////////////////////////////////////////////////////////////////\n    // dhStretch3 - At the end of the game, have the loser score melt off the screen. ///\n    ////////////////////////////////////////////////////////////////////////////////////\n\n    const pScore1 = this.player1.score;\n    const pScore2 = this.player2.score;\n    const mScore = this.player1.maxScore;\n    var lCounter = 0;\n    var timeId = 0;\n\n    if ((pScore1 || pScore2) === mScore) {\n      // someone won!\n      console.log(pScore1, pScore2, mScore);\n\n      if (pScore1 > pScore2) {\n        // alert(\"Player1 won\");\n        // Player1 wins, drop player2 score off the board\n        let loserScore = pScore2;\n        let counter2 = 2;\n        for (lCounter = 0; lCounter < 256; lCounter += 35) {\n          // += 10?\n          // console.log(lCounter);\n          // timeId = setTimeout(this.emptyFunction(2), 2000);\n\n          // this.score2 = new Score(this.width / 2 + 25, 30 + lCounter, 30);\n\n          this.score2.textContext = \"   \";\n          this.score2.render(svg, pScore2);\n          this.score2.textContextr = loserScore;\n          this.score2.y = 30 + lCounter;\n          this.score2.render(svg, pScore2);\n\n          for (counter2 = 0; counter2 < 10000; counter2++) {\n            console.log(counter2);\n          }\n          // put delay here, so that the score-dropping goes slowly\n          // this.emptyFunction(1);\n          //loop for 1 seconds\n        }\n      } else {\n        // player2 wins, drop player1 score off the board\n        // alert(\"player 2 won \");\n\n        for (lCounter = 0; lCounter < 200; lCounter++) {\n          this.score1 = new Score(this.width / 2 - 50, 30 + lCounter, 30);\n          this.score1.render(svg, this.player2.score);\n\n          // for (lCounter2 = 0; lCounter2 < 100; lCounter2++) {\n          //   console.log(\"lCounter2b\", lCounter, lCounter2);\n          // }\n        }\n      }\n      alert(\"game is over...in game.js\");\n      window.location.reload(true);\n      //how to put game in pause mode?\n    }\n\n    /////////////////////////// End of dhStretch\n  }\n}\n","import \"./styles/game.css\";\nimport Game from \"./partials/Game\";\n\n// create a game instance\nconst game = new Game(\"game\", 512, 256);\n\nlet counter = 0;\n//\n(function gameLoop(now) {\n  // counter++;\n  game.render();\n  // if (counter > 2 && now < 2000) {\n  requestAnimationFrame(gameLoop);\n  // }\n  // repaint the screen. Comment out for debuging256\n  // console.log(\"Millaseconds\", now);\n  // console.log(\"counter\", counter);\n})();\n\n//\n"]}